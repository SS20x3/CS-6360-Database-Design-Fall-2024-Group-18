drop view if exists graph_4;create view graph_4 as (select src, dst, score, score maxScore from graph);drop view if exists graph_3;create view graph_3 as (select R.src, R.dst, R.score, R.score+S.maxScore maxScore from graph R, (select src, max(score) maxScore from graph_4 group by src) S where R.dst=S.src);drop view if exists graph_2;create view graph_2 as (select R.src, R.dst, R.score, R.score+S.maxScore maxScore from graph R, (select src, max(score) maxScore from graph_3 group by src) S where R.dst=S.src);drop view if exists graph_1;create view graph_1 as (select R.src, R.dst, R.score, R.score+S.maxScore maxScore from graph R, (select src, max(score) maxScore from graph_2 group by src) S where R.dst=S.src);drop view if exists graph_0;create view graph_0 as (select R.src, R.dst, R.score, R.score+S.maxScore maxScore from graph R, (select src, max(maxScore) maxScore from graph_1 group by src) S where R.dst=S.src order by maxScore desc);drop table if exists graph_0_joined;create table graph_0_joined as (select * from graph_0);drop table if exists graph_1_id;create table graph_1_id as (with R as (select dst, max(score) maxScore from graph_0_joined group by dst), T as (select S.src as src, S.dst as dst, S.score as score, R.maxScore+S.maxScore as maxScore from R, graph_1 S where R.dst = S.src order by maxScore desc limit 10) select src, dst, score, maxScore, row_number() over(partition by src order by maxScore desc) as id from T);create index id_index_1 on graph_1_id (id);drop view if exists S0;drop view if exists T0;create view S0 as (select * from graph_1_id where id<=1);create view T0 as (select R.src src, R.dst joinNode, S.dst dst, S.id id, R.score lScore, S.score rScore, lScore+rScore score from graph_0_joined R, S0 S where R.dst=S.src order by score desc limit 10);drop view if exists R1;drop view if exists S1;drop view if exists T;create view R1 as (select src, joinNode as dst, lscore score from T0);create view S1 as (select * from graph_1_id where id<=10);create view T as (select R1.src src, S1.dst dst, R1.score+S1.score score from R1, S1 where R1.dst=S1.src order by score desc limit 10);drop table if exists graph_1_joined;create table graph_1_joined as (select src, dst, score from T order by score desc);drop table if exists graph_2_id;create table graph_2_id as (with R as (select dst, max(score) maxScore from graph_1_joined group by dst), T as (select S.src as src, S.dst as dst, S.score as score, R.maxScore+S.maxScore as maxScore from R, graph_2 S where R.dst = S.src order by maxScore desc limit 10) select src, dst, score, maxScore, row_number() over(partition by src order by maxScore desc) as id from T);create index id_index_2 on graph_2_id (id);drop view if exists S0;drop view if exists T0;create view S0 as (select * from graph_2_id where id<=1);create view T0 as (select R.src src, R.dst joinNode, S.dst dst, S.id id, R.score lScore, S.score rScore, lScore+rScore score from graph_1_joined R, S0 S where R.dst=S.src order by score desc limit 10);drop view if exists R1;drop view if exists S1;drop view if exists T;create view R1 as (select src, joinNode as dst, lscore score from T0);create view S1 as (select * from graph_2_id where id<=10);create view T as (select R1.src src, S1.dst dst, R1.score+S1.score score from R1, S1 where R1.dst=S1.src order by score desc limit 10);drop table if exists graph_2_joined;create table graph_2_joined as (select src, dst, score from T order by score desc);drop table if exists graph_3_id;create table graph_3_id as (with R as (select dst, max(score) maxScore from graph_2_joined group by dst), T as (select S.src as src, S.dst as dst, S.score as score, R.maxScore+S.maxScore as maxScore from R, graph_3 S where R.dst = S.src order by maxScore desc limit 10) select src, dst, score, maxScore, row_number() over(partition by src order by maxScore desc) as id from T);create index id_index_3 on graph_3_id (id);drop view if exists S0;drop view if exists T0;create view S0 as (select * from graph_3_id where id<=1);create view T0 as (select R.src src, R.dst joinNode, S.dst dst, S.id id, R.score lScore, S.score rScore, lScore+rScore score from graph_2_joined R, S0 S where R.dst=S.src order by score desc limit 10);drop view if exists R1;drop view if exists S1;drop view if exists T;create view R1 as (select src, joinNode as dst, lscore score from T0);create view S1 as (select * from graph_3_id where id<=10);create view T as (select R1.src src, S1.dst dst, R1.score+S1.score score from R1, S1 where R1.dst=S1.src order by score desc limit 10);drop table if exists graph_3_joined;create table graph_3_joined as (select src, dst, score from T order by score desc);drop table if exists graph_4_id;create table graph_4_id as (with R as (select dst, max(score) maxScore from graph_3_joined group by dst), T as (select S.src as src, S.dst as dst, S.score as score, R.maxScore+S.maxScore as maxScore from R, graph_4 S where R.dst = S.src order by maxScore desc limit 10) select src, dst, score, maxScore, row_number() over(partition by src order by maxScore desc) as id from T);create index id_index_4 on graph_4_id (id);drop view if exists S0;drop view if exists T0;create view S0 as (select * from graph_4_id where id<=1);create view T0 as (select R.src src, R.dst joinNode, S.dst dst, S.id id, R.score lScore, S.score rScore, lScore+rScore score from graph_3_joined R, S0 S where R.dst=S.src order by score desc limit 10);drop view if exists R1;drop view if exists S1;drop view if exists T;create view R1 as (select src, joinNode as dst, lscore score from T0);create view S1 as (select * from graph_4_id where id<=10);create view T as (select R1.src src, S1.dst dst, R1.score+S1.score score from R1, S1 where R1.dst=S1.src order by score desc limit 10);drop table if exists graph_4_joined;create table graph_4_joined as (select src, dst, score from T order by score desc);select * from graph_4_joined;
